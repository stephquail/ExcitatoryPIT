{
    "contents" : "##This script extracts and analyses specific and general transfer data from the Pavlovian-Instrumental Transfer task\n##Before you run this you need:\n#The log files for each participant in the 'R/data' folder\n#Participant log files all named '(whateveryouridis).log'\n#The packages that R uses installed\n#-if you try to run this without the appropriate packages installed it wont work\n#-you can use install.packages() to download these\n#-this may take a bit of fiddling if your unis firewall doesn't like you doing this\n#You will need to create individual participant ID vectors in the 'R/functions.R' script \n\nlibrary(ggplot2)\nlibrary(reshape2)\nsource(\"R/functions.R\") #this loads the functions that will be needed for analysis\n\n#Create a list of all of the participant ID vectors that are created in the 'functions.R' script\n\n#Example of this from a similar task\n#ID <- list(iPIT401, iPIT402, iPIT403, iPIT404)\n\nID <- list()\n\n#Create empty vectors that will be filled with participant data as the analysis loops through each indiviudal data set\n\nparticipant <-() # creates a vector that will be filled with participant IDs\n#specific transfer results\nsame <- ()\ndifferent <- ()\n#general transfer results\ncs_plus <- ()\ncs_minus <- ()\npreCS <- () #baseline responding\n\n#loop through the data extraction for each participant\nfor(i in ID){\n  #read participant data\n  data <- read.delim(i[[1]], header = FALSE) #uses the path in the participant ID vector to read the log file\n  version <- i[[2]] #looks for the version in the second item of the participant vector\n  \n  #give the data column headings\n  colnames(data) <- c(\"time\", \"type\", \"text\")\n  \n  #find the time that each left and right response was made\n  #this subsets the time column for each row where a left or right keypress is made\n  #IF YOU CHANGE KEYS FOR LEFT AND RIGHT YOU WILL NEED TO CHANGE THIS \n  \n  r1times <- data$time[data$text == \"Keypress: t\"] #left is always R1\n  r2times <- data$time[data$text == \"Keypress: v\"] #right is always R2\n  \n  ##Counterbalancing for version used\n  #S1 <- cue that is paired with same outcome as R1\n  #S2 <- cue that is paired with same outcome as R2\n  #S3 <- cue that is paired with non-instrumentally available outcome\n  #S4 <- yellow cue always associated with no outcome delivered\n  if(version == \"A\"){\n    s1.text <- red.text\n    s2.text <- green.text\n    s3.text <- blue.text\n    s4.text <- yellow.text #yellow CS is always CS-\n  } else if(version == \"B\"){\n    s1.text <- green.text\n    s2.text <- red.text\n    s3.text <- blue.text\n    s4.text <- yellow.text #yellow CS is always CS-\n  } else if(version == \"C\"){\n    s1.text <- blue.text\n    s2.text <- green.text\n    s3.text <- red.text\n    s4.text <- yellow.text #yellow CS is always CS-\n  } else if(version == \"D\"){\n    s1.text <- green.text\n    s2.text <- blue.text\n    s3.text <- red.text\n    s4.text <- yellow.text #yellow CS is always CS-\n  } else if(version == \"E\"){\n    s1.text <- red.text\n    s2.text <- blue.text\n    s3.text <- green.text\n    s4.text <- yellow.text #yellow CS is always CS-\n  } else if(version == \"F\"){\n    s1.text <- blue.text\n    s2.text <- red.text\n    s3.text <- green.text\n    s4.text <- yellow.text #yellow CS is always CS-\n  } else {\n    \"Invalid Version Selected\"\n  }\n    \n  \n  \n}\n  \n",
    "created" : 1434761228223.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2639902032",
    "id" : "D6A1E3EA",
    "lastKnownWriteTime" : 1434764711,
    "path" : "~/GitHub/ePIT/analysis.R",
    "project_path" : "analysis.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}